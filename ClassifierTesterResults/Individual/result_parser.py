#This is a quick and dirty script that reads through the .txt files
#that are generated by individual_tests.py and collates the data into
#Pandas dataframes to be converted to excel sheets.

import pandas as pd
import io
import re
import openpyxl

#These are used for looping.
stim_combos = [('hf', 'imaginary', 'HF-IM'), ('hf', 'movement', 'HF-MM'), ('lr', 'imaginary', 'LR-IM'),
               ('lr', 'movement', 'LR-MM')]
ch_layouts = ['64ch', 'headband', 'motor_cortex']
subject_range = range(1, 110)
ignore_list = [38, 80, 88, 89, 92, 100, 104]
subject_range = list(set(subject_range) - set(ignore_list))
columns = ['subject_no', 'layout',
           'cspknn_accuracy', 'cspknn_recall', 'cspknn_precision', 'cspknn_f1', 'cspknn_roc-auc',
           'cspsvm_accuracy', 'cspsvm_recall', 'cspsvm_precision', 'cspsvm_f1', 'cspsvm_roc-auc',
           'csplda_accuracy', 'csplda_recall', 'csplda_precision', 'csplda_f1', 'csplda_roc-auc',
           'mdm_accuracy', 'mdm_recall', 'mdm_precision', 'mdm_f1', 'mdm_roc-auc',
           'tslr_accuracy', 'tslr_recall', 'tslr_precision', 'tslr_f1', 'tslr_roc-auc',
           'covcsplda_accuracy', 'covcsplda_recall', 'covcsplda_precision', 'covcsplda_f1', 'covcsplda_roc-auc',
           'covcsplr_accuracy', 'covcsplr_recall', 'covcsplr_precision', 'covcsplr_f1', 'covcsplr_roc-auc',
           'fbcspsvm_accuracy', 'fbcspsvm_recall', 'fbcspsvm_precision', 'fbcspsvm_f1', 'fbcspsvm_roc-auc',]

#This is the general format for the file names.
#sub = subject number, stim = stimulus type, resp = response type, ch = channel layout
file_name_blank = "sub{sub}_{stim}_{resp}_{ch}"

for stim in stim_combos:
    #Create an empty dataframe with our columns
    data_frame = pd.DataFrame(columns=columns, dtype=str)

    #For each subject, load the text files and search for the values.
    for sub in subject_range:
        for layout in ch_layouts:
            print(str(sub) + " " + layout + " " + str(stim))
            #Open the non-fb file.
            fname = file_name_blank.format(sub=sub, stim=stim[0], resp=stim[1], ch=layout)
            path = "{path}/{fname}.txt".format(path=stim[2], fname=fname)
            with io.open(path, 'r') as file:
                contents = file.readlines()

            #Now, we fill the list with our data.
            data_list = [str(sub), layout]
            pat = re.compile(r"test_\w* = ")
            for line in contents:
                if pat.search(line) is not None:
                    data = line.strip('\n')
                    data = re.sub(pat, '', data)
                    data_list.append(data)

            # Open the fb file.
            fname = fname + '_fb'
            path = "{path}/{fname}.txt".format(path=stim[2], fname=fname)
            with io.open(path, 'r') as file:
                contents = file.readlines()

            # Now, we fill the list with our data.
            pat = re.compile(r"test_\w* = ")
            for line in contents:
                if pat.search(line) is not None:
                    data = line.strip('\n')
                    data = re.sub(pat, '', data)
                    data_list.append(data)

            #And finally we append it to our data frame.
            data_frame.loc[len(data_frame)] = data_list
    print(data_frame)
    filename = "{stim}-Parsed_Results.xlsx".format(stim=stim[2])
    writer = pd.ExcelWriter(filename, engine='xlsxwriter')
    data_frame.to_excel(writer)
    writer.save()


